service: product-service

app: aleks-rs-app-app
org: aleksbyczyk

frameworkVersion: '2'

provider: 
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  region: eu-west-1
  profile: private
  stage: dev
  httpApi:
    cors: true
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    PG_HOST: ${ssm:/db_host}
    PG_DATABASE: ${ssm:/db_database}
    PG_USERNAME: ${ssm:/db_username}
    PG_PASSWORD: ${ssm:/db_password}
    # EMAIL_ADDRESS: ${ssm:/email~true}
  # iam:
  #   role:
  #     statements:
  #       - Effect: Allow
  #         Action:
  #           - sns:*
  #         Resource: 
  #           - !Ref ProductsSnsTopic

plugins:
  - serverless-webpack

custom:
  # snsTopicName: aleksbyczyk-import-service-topic
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

functions:
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          method: get
          path: /products
          cors: true
  getProductsById:
    handler: handler.getProductsById
    events:
      - http:
          method: get
          path: /products/{productId}
          cors: true

# resources:
#   Resources:
#     ## SNS Topic
#     ProductsSnsTopic:
#       Type: AWS::SNS::Topic
#       Properties:
#         TopicName: ${self:custom.snsTopicName}

#     ## SNS Subscription
#     ProductsSnsSubscription:
#       Type: AWS::SNS::Subscription
#       Properties:
#         Endpoint: ${self:provider.environment.EMAIL_ADDRESS}
#         Protocol: email
#         TopicArn: !Ref ProductsSnsTopic